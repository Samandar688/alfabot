from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Any, Optional


def get_controller_main_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    if lang == 'uz':
        keyboard = [
            [KeyboardButton(text="üì• Inbox"), KeyboardButton(text="üìã Arizalarni ko'rish")],
            [KeyboardButton(text="üîå Ulanish arizasi yaratish"), KeyboardButton(text="üîß Texnik xizmat yaratish")],
            [KeyboardButton(text="üïê Real vaqtda kuzatish"), KeyboardButton(text="üìä Monitoring")],
            [KeyboardButton(text="üë• Xodimlar faoliyati"), KeyboardButton(text="üì§ Export")],
            [KeyboardButton(text="üåê Tilni o'zgartirish")]
        ]
    else:
        keyboard = [
            [KeyboardButton(text="üì• –í—Ö–æ–¥—è—â–∏–µ"), KeyboardButton(text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫")],
            [KeyboardButton(text="üîå –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"), KeyboardButton(text="üîß –°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üïê –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"), KeyboardButton(text="üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")],
            [KeyboardButton(text="üë• –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"), KeyboardButton(text="üì§ –≠–∫—Å–ø–æ—Ä—Ç")],
            [KeyboardButton(text="üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")]
        ]
    
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_controller_export_types_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Controller export turlari klaviaturasi (uz/ru)."""
    lang = (lang or 'uz').lower()

    if lang == "ru":
        keyboard = [
            [InlineKeyboardButton(text="üìã –¢–µ—Ö–Ω. –∑–∞—è–≤–∫–∏", callback_data="controller_export_tech_requests")],
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="controller_export_statistics")],
            [InlineKeyboardButton(text="üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", callback_data="controller_export_employees")],
            [InlineKeyboardButton(text="üìà –û—Ç—á–µ—Ç—ã", callback_data="controller_export_reports")],
            [InlineKeyboardButton(text="üö´ –í—ã—Ö–æ–¥", callback_data="controller_export_end")],
        ]
    else:  
        keyboard = [
            [InlineKeyboardButton(text="üìã Texnik arizalar", callback_data="controller_export_tech_requests")],
            [InlineKeyboardButton(text="üìä Statistika", callback_data="controller_export_statistics")],
            [InlineKeyboardButton(text="üë• Xodimlar", callback_data="controller_export_employees")],
            [InlineKeyboardButton(text="üìà Hisobotlar", callback_data="controller_export_reports")],
            [InlineKeyboardButton(text="üö´ Yopish", callback_data="controller_export_end")],
        ]

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_controller_export_formats_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Manager export formats selection keyboard"""
    if lang == "uz":
        keyboard = [
            [InlineKeyboardButton(text="CSV", callback_data="controller_format_csv")],
            [InlineKeyboardButton(text="Excel", callback_data="controller_format_xlsx")],
            [InlineKeyboardButton(text="Word", callback_data="controller_format_docx")],
            [InlineKeyboardButton(text="PDF", callback_data="controller_format_pdf")],
            [InlineKeyboardButton(text="‚óÄÔ∏è Orqaga", callback_data="controller_export_back_types")]
        ]
    else:     
        keyboard = [
            [InlineKeyboardButton(text="CSV", callback_data="controller_format_csv")],
            [InlineKeyboardButton(text="Excel", callback_data="controller_format_xlsx")],
            [InlineKeyboardButton(text="Word", callback_data="controller_format_docx")],
            [InlineKeyboardButton(text="PDF", callback_data="controller_format_pdf")],
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="controller_export_back_types")]
        ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

