from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from typing import List, Dict, Any


def get_contact_keyboard(lang="uz"):
    share_contact_text = "üì± Kontakt ulashish" if lang == "uz" else "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=share_contact_text, request_contact=True)]],
        resize_keyboard=True
    )
    return keyboard

def get_client_main_menu(lang="uz"):
    service_order_text = "üîß Texnik xizmat" if lang == "uz" else "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–ª—É–∂–±–∞"
    connection_order_text = "üîå Ulanish uchun ariza" if lang == "uz" else "üîå –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    contact_operator_text = "üìû Operator bilan bog'lanish" if lang == "uz" else "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"
    cabinet_text = "üë§ Kabinet" if lang == "uz" else "üë§ –ö–∞–±–∏–Ω–µ—Ç"
    bot_guide_text = "Bot qo'llanmasi" if lang == "uz" else "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"
    change_language_text = "üåê Til o'zgartirish" if lang == "uz" else "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
    
    buttons = [
        [
            KeyboardButton(text=connection_order_text),
            KeyboardButton(text=service_order_text)    
        ],
        [
            KeyboardButton(text=contact_operator_text),
            KeyboardButton(text=cabinet_text)
        ],
        [
            KeyboardButton(text=bot_guide_text),
            KeyboardButton(text=change_language_text)
        ]
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=buttons,
        resize_keyboard=True
    )
    return keyboard

def zayavka_type_keyboard(lang="uz"):
    """Zayavka turini tanlash klaviaturasi - 2 tilda"""
    person_physical_text = "üë§ Jismoniy shaxs" if lang == "uz" else "üë§ –§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"
    person_legal_text = "üè¢ Yuridik shaxs" if lang == "uz" else "üè¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=person_physical_text, callback_data="zayavka_type_b2c")],
            [InlineKeyboardButton(text=person_legal_text, callback_data="zayavka_type_b2b")]
        ]
    )
    return keyboard

def media_attachment_keyboard(lang="uz"):
    """Media biriktirish klaviaturasi - 2 tilda"""
    yes_text = "‚úÖ Ha" if lang == "uz" else "‚úÖ –î–∞"
    no_text = "‚ùå Yo'q" if lang == "uz" else "‚ùå –ù–µ—Ç"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=yes_text, callback_data="attach_media_yes")],
        [InlineKeyboardButton(text=no_text, callback_data="attach_media_no")]
    ])
    return keyboard

def geolocation_keyboard(lang="uz"):
    """Geolokatsiya klaviaturasi - 2 tilda"""
    yes_text = "‚úÖ Ha" if lang == "uz" else "‚úÖ –î–∞"
    no_text = "‚ùå Yo'q" if lang == "uz" else "‚ùå –ù–µ—Ç"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=yes_text, callback_data="send_location_yes")],
        [InlineKeyboardButton(text=no_text, callback_data="send_location_no")]
    ])
    return keyboard

def confirmation_keyboard(lang="uz"):
    """Tasdiqlash klaviaturasi - 2 tilda"""
    confirm_text = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    resend_text = "üîÑ Qayta yuborish" if lang == "uz" else "üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=confirm_text, callback_data="confirm_zayavka"),
            InlineKeyboardButton(text=resend_text, callback_data="resend_zayavka")
        ]
    ])
    return keyboard

def get_client_tariff_selection_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Tariff selection keyboard for client"""
    keyboard = [
        [
            InlineKeyboardButton(text="Hammasi birga 4", callback_data="tariff_xammasi_birga_4"),
            InlineKeyboardButton(text="Hammasi birga 3+", callback_data="tariff_xammasi_birga_3_plus")
        ],
        [
            InlineKeyboardButton(text="Hammasi birga 3", callback_data="tariff_xammasi_birga_3"),
            InlineKeyboardButton(text="Hammasi birga 2", callback_data="tariff_xammasi_birga_2")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_client_regions_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Regions selection keyboard for client"""
    keyboard = [
        [
            InlineKeyboardButton(text="Toshkent shahri", callback_data="region_toshkent_city"),
            InlineKeyboardButton(text="Toshkent viloyati", callback_data="region_toshkent_region")
        ],
        [
            InlineKeyboardButton(text="Andijon", callback_data="region_andijon"),
            InlineKeyboardButton(text="Farg'ona", callback_data="region_fergana")
        ],
        [
            InlineKeyboardButton(text="Namangan", callback_data="region_namangan"),
            InlineKeyboardButton(text="Sirdaryo", callback_data="region_sirdaryo")
        ],
        [
            InlineKeyboardButton(text="Jizzax", callback_data="region_jizzax"),
            InlineKeyboardButton(text="Samarqand", callback_data="region_samarkand")
        ],
        [
            InlineKeyboardButton(text="Buxoro", callback_data="region_bukhara"),
            InlineKeyboardButton(text="Navoiy", callback_data="region_navoi")
        ],
        [
            InlineKeyboardButton(text="Qashqadaryo", callback_data="region_kashkadarya"),
            InlineKeyboardButton(text="Surxondaryo", callback_data="region_surkhandarya")
        ],
        [
            InlineKeyboardButton(text="Xorazm", callback_data="region_khorezm"),
            InlineKeyboardButton(text="Qoraqalpog'iston", callback_data="region_karakalpakstan")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_contact_options_keyboard(lang: str = "uz"):

    call_text = "üìû Qo'ng'iroq qilish" if lang == "uz" else "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å"
    chat_text = "üí¨ Onlayn chat" if lang == "uz" else "üí¨ –û–Ω–ª–∞–π–Ω-—á–∞—Ç"
    back_text = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    
    reply_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=call_text)],
            [KeyboardButton(text=chat_text, web_app=WebAppInfo(url="https://webapp-gamma-three.vercel.app/"))],
            [KeyboardButton(text=back_text)],
        ],
        resize_keyboard=True,
    )

    return reply_keyboard